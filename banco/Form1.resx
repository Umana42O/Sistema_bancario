<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imagen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASERUSERIVFRAWGBcWGBcXFxUYFRYaGhoWGBUbFRcY
        HC4gGBsoHRkXIjEiJSkrLi4uFyAzODcsNygvLiv/2wBDAQoKCg4NDhsQEBstJiAmLS0tLS8uLS01LS0t
        LS0tLS8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCADUAO4DASIAAhEBAxEB/8QA
        HAABAAMBAQEBAQAAAAAAAAAAAAUGBwQDAQgC/8QAQhAAAQMCBAMFBAgCCAcAAAAAAQACAwQRBRIhMQZB
        UQcTImFxMoGRoRQjQlJicqKxgpIVFyQzwdHS4RY0U5OjwvD/xAAaAQEAAwEBAQAAAAAAAAAAAAAAAQID
        BAUG/8QAMBEAAgIBAgMFBwQDAAAAAAAAAAECEQMhQQQSMRMiUWHRcYGRobHB8AUjMvEUQuH/2gAMAwEA
        AhEDEQA/ANxREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQ
        BERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREAREQBERAEREB8JWe8a
        cfCmqGQQWdke0zu38IIzRt/Fbc8tB1tJ9oPFP0OHJGf7VKCGfgbsXn9h1PoVh7nEkkkknUk6knncqsns
        edxnFuHch13P05FIHAOabtIBBGxB1BXoqZ2W4v39EI3H6yA92fy7xn0t4f4Fc1ZOzuxzU4qS3CIiFwiI
        gCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCLzlka0FziA0akkgAepKq+KdoGHQ3Al713SEZ/16M+aN0V
        lOMP5Oi2KPxvFI6WB88h8DBe3Nx+y0eZNh71m+JdrEpuKena3o6Rxcf5W2sfeVTsd4nrKwAVEuZgOYMD
        WtaDa19Bc7ncndVclsceTj8aXc1ZyYziclVO+eU+N525NH2Wt8gNFxIrVwLwi6ukzyXbSsPjdsXnfI0/
        ueQ8yFTqeRCMss6XVk92P4fUNfJUezSubkN/tuBBBb5N8QJ21I62vz+J6UEjM4200abe481A45i7cop6
        cBsDQG+HQEDQNbb7P7+m8CuDPxzi+XHT8X6HrQl2MFCLvz9C8Hi2m6P/AJf918/4tp/uyfBv+pUhTGFc
        PzTWcfBH1I1P5W/4n5rKHGcRN8sUm/Z/0vHNkk6RPt4rgJADJSTsA0En0AKmoJczQcpbfk61/fYrlw3C
        oYB4G+Lm46uPv5egUgvTxLJX7jV+SOqPNXeCIi2LBERAEREAREQBERAEREAREQBERAFxYlFM6JwgkEcp
        HheW5wD5tvr/APbrtRA1Z+feMIcRZLlr3Pc7dpLiYnecf2R6AAi+oCr6/SuJYdDURmKZgfG7cH5EHcHz
        GqyXi3s7mp7y0uaWDct3ljHoPbb5jXy5rNxo8bieCnF80dV8yioi7sGwuWqmZBCLvdz5NH2nO6Af7blV
        PPinJ0iQ4P4akrp8gu2JtjI/7o6D8R5e88lpWLV8cUYo6UBsTBlJHPq0HnzueZJ87p+6oKcUdL7W8j/t
        Enck/ePyFgoFcHGcTy3jj739vU9aEFhjyrru/sF00NDJM7LG255nkPU8lJ4fgXhM1S4RQNGY5iBp1JPs
        j1XzC+OKZ1XFR0rPqHFzTIdAXBpLco3IJFrnU/NY4OBlPWei+b9C6glXO6vp4snsJ4diis5/jk6keEfl
        H+J+SnkRexjxxxrliqR3xioqkERFckIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAKD4wxb6JRyzA+MDKz
        87vC31te/oCpxZN2x4rmkipWnRg7x/5neFg9Q3Mf41DdIw4jL2eJy/LM5YwuIABc4kAAXJJOgA6kla9g
        mGtwql1sa6YXcdDkHIDyHzPkNIXs8wNkMf8ASNSOogYdyds/7geVz0U1SUM9ZIXnQE+J59keTRz9PiuL
        iMso9yH8n8l4/nxODhcTgub/AGfTyXj79iPp4JJX5Wguedf8yTy9SpatqaPC2B9Q4S1JF2Rt39QDsPxH
        pp0Uhj0NVSUpGHQh8h9px1kA+81lvGd9OXQrD6uaR73Olc50hJzF1y6+xzX1vy9yrw/CRxay1l8l6+0v
        mydhtb8dl6sl+JeKqmud9a7LEDdsTb5B0v8Aed5n3W2UVQ1Riljlb7Ub2vH8JB/wXOvi6jy5ZJSlzN6n
        6dglD2hzTdrgHA9QRcL1VX7Oa/vsOhJ9pgMZ/gNm/py/FWhbI+lhLmipLcIiIWCIiAIiIAiIgCIiAIiI
        AiIgCIiAIiIAiIgPOV4aCSbAAknoBqViWEUBxbEJZpLinDjJK46WjGkbL8iWtA9ATyWkdoVY9lG6KIZp
        qhzYGNG5z+1+kOF+VwvfhvhqOlpWwaON88p5SP0vf8IsAB0AvzvWVvocmbH2uRRfRav27I8I8PNW9r3D
        u6RgtGwaFzRzA+yDYe61uqskMTWANaAGjQAbBeqKmPEoW931Z0xilrufCq3xPwdS1oLntyT20lYBm8sw
        2ePXXoQrKi1EoqSqStH594m4RqqI3kbmhvpK25Yembmw+R9xKr6/TskbXAtcAWkWIIuCDuCDus84q7NG
        PvJQ2jfuYj/dn8h+wfLb0WbjXQ8vP+nta4/h+fnmcvYviGtRTn8MrR+h/wD6LUlhXBL5aPFImTMdG5xM
        bmuFjZ+jfUZsuuxst1Vo9Dq4Gd4qe2gREVjsCIiAIiIAiIgCIiAIvhWUcXce1cFbNDA5gijIaLsBN8rc
        9z+a49yhujLNmjijzSNYRYf/AFmYj95n/bH+an+Ee0eaWdkFU1lpHBjXsBaQ46NDgSQQTpcWtdRzIxhx
        2GTpN/A1FERWOsIiIAiIgIqTD+8qmzP2haWxD8T/AO8f/KGtHq/qpVEQhKgiIhIREQBERAReM4JBVACV
        l3NIcx40ewg3BY7lqBpsealERCKV2EREJCIiAIiIAiIgCIiA/h7gASdhqV+aa+pM00ktjmkc59ud3uLr
        fNb5xtWdzQVD72OQsB83+BvzcFg+E4dJUzMgiAMj7htzYaAuNzy0BVJdTy/1FuTjBfm3qa1xpTUlNhnd
        SNj7wMZHHo3OXiwDm89NST0v1Wc8CYY+or4Q0HKx7ZHnkGsIdr6kAe9c3EHDtVRuaKhts98rg4OBtuL8
        iLjQ9VofZNikD2SQNgZFK0BznNzHvRe1yXEm4PK9vFpZR1ZS+2zpTXLW2+hN8ccXsoWta1ofUPF2tJs1
        o2zPtra+w52PRZ7Jx3jD2mVrssQNi5kTDG09C5zTbfmVbeOMPwnvjLWzyCYtaAxjiSGjazA0kDc3PMlV
        zGuNqb6CaGjheI8uTPJlBy3u45Re5OuptvdTJ69TXiJy5nc6WyT1vzJfgPjyoqKhtNUhri8OyPaMpzNB
        cQ4DQggHYDbnfSX7R+KZqFsIgy95IXk5m5hlaG+Y5uHwVK7I6LPXGQjSJjnX6OdZg+TnfBfe1ytz1wjB
        0ija23RzrvPyLUt8pVZ8i4Vyb1uk/wA957QdqFWI35mxulNshDSGsGudzhfxH2bDQDUnouCk7R8RY8Pk
        kbIy9ywsjAI5gFoBBtsb/FW/s9pY6bC5ap7Bme2V7iRqWMzNa308JNvxLL8Dou+qIYbXD3safQkZvldQ
        21uY5JZoqHf1Zt3HOPPo6TvosveOexrMwJGviNwCPshyoVF2oVl3d4yJ3hORrWuF33FrnMdAMxtzsBpu
        pHtpq/8Al4R+OQj+VrP3evnY3hTT31U4AuBEbD00zSW9QWD49VLvmpHTknklxPZwlSIGHtJxEPzOexzb
        6sLGhtugI8Q+K1DFsfDMOdWR21ja9gdqMz7BgcOerhdYtxg5prqksADe9eNNrgkOPxBPvV442mMOC0kB
        0dII8w8mszu/VlRN6meDNOKyXK6+uqI/De06q7wGcRdyA4uDGOD3WacoaS4gXdYX5C6keEOMa6trg17m
        Mp2tkkexrW2ygWF3u19pzdbjZVzs54cjrZ398CYYmhzmgkZnOJDASNQNHHTorlx/S01DRPNNDHFLNaHM
        xoDsh8UgJ5ghlveiurGGWZw7Wcu6tfN0RPEfadKZCyia0MBt3jhmc/zY3YDpe5Pkog8f4vC+0rhm3ySx
        Nbpy0Aa63vTspwwTVwe4XbC0yeWa4az9yfVq9+2CYOrmtH2ImA+pc937EfFRrVmcsmaWJ5nJrXouhp3C
        mONraZs4blJu1zb3yuG9jzGxHkVNKkdkcJbh+Y/blkcPdZn7tKu6uuh6uGTlji34BERSaBERAEREAREQ
        BERAUDtirMtGyIHWSQXHVrASf1FipnZjUU8VY6aoljjaxjspe4Nu5xaNL7+HMr3x7wjUV8kRjkjYyNrh
        Z2a+ZxF9htZrVVf6p6r/AK8X/k/0qjuzzM8Mzz9pGN10OftP4lhq3xRU7s8ceYl9jZznWFm33AA3538l
        2dl0ZggrK5zfAyPK38RaC94+TB712Yb2T2cDUVF2/djbYn+Nx0+CvkmDQ/RXUjB3cLo3RgN+yHAi4vud
        b3O5RJ3bLYsGWWV5p6Pb6GD4Ww1dbGJ36zSN7x5OpzEXseR5Dpord2oCkgZDR0rI2EOMkgYBcWGWPvDu
        ScztzfRc7uyyuz5Q+Esv7WZw06luW9/L5qQrOymTwCGZmjfGXhwLn3Ny0AEBtsoHPQqEnRzww5ljlHk1
        e53djFHaGebm57Yx6Mbm0/n+Szviut76sqJeRe+35WnK39IC2vhPApaOi+jlzDKDIQ5t8t3ElpNxfTT4
        Kl0nZRK2Rjn1LHMDmlwyOu4AguF78wpadUa5uHyPDDHFe0meL/7Lggi2cWRRepNjJ8QHqldldF3mIsdb
        SJj5PlkHzf8AJaTxzw1LXxxxslbG1ji85gTc2s21jyu74rm4G4Ndh7pXvlbIXhrRZpGUAuLr3PPT4Ka7
        xrkwylxEXXdX9mfdqVZ3mIyDlE1kfyzn5vI9yuHAmLU9LhHeue27TKXNuMxfmORoHUgM+Ky7GKsz1Eso
        ue8e9w6+JxLR8LBXTFuy6pEl6Z0boyBo9xa5psMw2Nxe9iqJu7RyYZ5Hlnlgr2+PT6FNwmifVVMcW75X
        gOPqbvPuGY+5XLtiqwamGAbRx5vQvNrfBg+KtPAvA4oiZpnB9QRlGW+SMHfKTqSethpp1vGcVdn9VV1c
        lQJog12UNBz3Aa0N1sPIn3q1OjRcNkjgarvNr4HV2O0eWkklI1kksPNrAAP1F6jO2uQ3pWfZ+ud7/qwP
        3PxV84Vwn6JSRU5ILmA5iL2LnEuda/K5Ufxtws2via3NkmjJLHWuNbZmuHQ2Go2sN9jNd2jqnhk+G7Nd
        aXqVbsYawMqnkgG8YNyPC0B5ueg1PwVF4oxD6VWzSsu4SSZWW3cBZkdh5gDTzVg/qwxEEgOhsdLiR1iP
        PwXt7lbuDuz1lK8TzvEszdWgA92w9ddXO6EgW6X1VabVHIsObJCOLlpLqy0cN4d9GpYYObGAOttmOrz/
        ADEqURFoeskkqQREQkIiIAiIgCIiAIiICo4zxg+OWWGmpjUOp2d5O7OGMjFr2BIOZ1uQ897G0rguPQ1F
        PFPcR941zg17gCMpIfvuAWnXos2wzGnxUFVWRTsiqJKpzi1zWvdI0gEMAdtq9zr2OjSpaGhFfiUcdWM/
        0ekjMo9lpkeA4ghttPrNvwqiZxQzSbtO7rTbV6a+xM0GOvhcCWysIADiQ5pAaRcE66C2t0fiEAFzLGBb
        NcvaBl+9vt5rJZKuMUWIysLQ+omZBG0HXu2EZQBvbuyR7l2vgphV1IqAx0VDSsiY11rOfkGwO5zFw9XB
        TzF1xF6ff2/ZWae6tiEfemRndWvnzNyW65r2X9U1SyRodG9r2HZzSHNPoRoso4epc0lBT1JH0eKGarc1
        9sji98hZmB0Nm5T73eatHZXDalklDcsc08kkbdgGaNFhy1aR7lKdlseaUmk1X9L5a0e+KcXyx1M1PBSO
        nMDA+RwkazKCA46Ea6Eba+Sk8D4igqadk9xGHhxyvc0EZCQ/nqBY69OipWAYXUV0tbURVXcxSyujdljD
        3PY32Q15Pg8LgNF60fD1NLiRpS0upqOBrMpJ8T3nPd1rXJzuJ8woTZnHJku9m6XTx0qteivUv0mJ07S0
        OmjaXgFt3tGYHYtudQfJc+O1TRDMxssTJu7dl7x4aGkgta53MC5GqymoZFPh807mtfV1VS2KEaF7Gtc2
        zGc2i126ci1d2KRROOKVMrRIIGxU0RcL2fYRFzb/AGg4A3/EU5h/ktrpt47U39F8zwwXgKZlTTl89MW5
        2SZWykvexpDvA3L4gQN1rRxGESCIyx96dmZ25z/De6yx1DHTT0eSMCSnpJKqYgeJzu7cWhx3NnAAX2BX
        8YJhucUPeSQCaSb6VntK6okDHF0gkeAWtFgTqQLt63UJ0Uw/td2Md/H2eNbujVnV8INjKy98tszb5tfD
        a++h08lwYVjJfB31SxlOMxAvNG9thsS9vhuddPJZ7h1PD/R9Xikjfr5HymNxJ8HeHu/CNr5nu18gvbC6
        WH6RDDUhv0ejoxK5j7Fhkks95LT7Xt/FoU8xqs0m01v5+PRv3ammOrogzvDIwRWvnzNyW/Ney/qmqY5G
        5o3te0/aa4OHxGizONtHampadneMYx9WHVT8kLGuNrvja36za4Gmjt9Sp7sohtROlsB30sklgLNA0ZZo
        5C7SpT1ovDM3JR8vpXqXZERSbhERAEREAREQBERAEREAREQEGeFaAuc40sZc/wBq43ubnTYa9FIQYfCy
        R8rI2tlktncB4nW0GY87LsRCqil0RBs4WoA4uFLFmLg++UXzC5BHTU7DRRmF8GQh00lYyKeSWZ8jTY2a
        HbN1356bbK3oopEdnHwIrE+H6OoLXTwMkc0WaSNQN7acvJd8MTWNDGtDWAWAAAAA0AAGwXsikskk7OPD
        sOhgZ3cEbY47k5WiwudylNh0Mb3yMja2SSxe4DxPte2Y89yuxEFIh6Xhyijl76OnjbLcnMGi4J3I5NO+
        3VejsApCx8Zgj7t7u8e3KLOf953UqURKI5I+Bw/0XB3jpe6Z3rmd251hcs08J/DoNFzUPDdHCXGKnjYX
        gtcQNS07i/IeQUuiDlXgRrsEpTCKcws+jjUR2GTcu29SSvKv4do53iSanje9oABc3kNgeo8ipdFFDkj0
        oiavh6jle2SWCN72jK0uaDYC9hbbS5t0XbRUccLBHEwMjbezWiwFySbD1JXSiknlSd0EREJCIiAIiIAi
        IgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgC
        IiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiA/9k=
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>